services:
  neo4j5:
    image: neo4j:${NEO4J_VERSION}
    ports:
      - 7474:7474
      - ${NEO4J_BOLT_PORT}:7687
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_AUTH=neo4j/password
      #- NEO4J_dbms_memory_heap_max__size=4G
      #- NEO4J_dbms_connector_bolt_advertised__address=localhost:${NEO4J_BOLT_PORT}
      - NEO4JLABS_PLUGINS=["apoc","graph-data-science"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 5s
      timeout: 2s
      retries: 50
      start_period: 15s
    volumes:
#      - ./data/neo4j5/data:/data
#      - ./data/neo4j5/plugins:/plugins
#      - ./data/neo4j5/backup:/backup
      - ./datasets/pole:/import/datasets/pole
      - ./datasets/fraud:/import/datasets/fraud
  init-neo4j5:
    image: neo4j/neo4j-admin:${NEO4J_ADMIN_VERSION}
    depends_on:
      neo4j5:
        condition: service_healthy
    command:
      - /bin/bash
      - -c
      - |
        bin/cypher-shell -a neo4j5 -u neo4j -p password -d neo4j 'create database pole;'
        bin/cypher-shell -a neo4j5 -u neo4j -p password -d pole -f /import/datasets/pole/neo4j-load.cypher
        bin/cypher-shell -a neo4j5 -u neo4j -p password -d neo4j 'create database fraud;'
        bin/cypher-shell -a neo4j5 -u neo4j -p password -d fraud -f /import/datasets/fraud/neo4j-load.cypher
    volumes:
      - ./datasets/pole:/import/datasets/pole
      - ./datasets/fraud:/import/datasets/fraud
